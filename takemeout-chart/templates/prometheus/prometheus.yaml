---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitoring
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::991122344296:role/prometheus"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/metrics
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources:
      - configmaps
    verbs: ["get"]
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: monitoring
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: main
  namespace: monitoring
spec:
  alerting:
    alertmanagers:
      - namespace: monitoring
        name: alertmanager-operated
        port: web
  ruleSelector:
    matchLabels:
      prometheus: main
  ruleNamespaceSelector:
    matchLabels:
      monitoring: prometheus
  version: v2.42.0
  serviceAccountName: prometheus
  podMonitorSelector:
    matchLabels:
      prometheus: main
  podMonitorNamespaceSelector:
    matchLabels:
      monitoring: prometheus
  serviceMonitorSelector:
    matchLabels:
      prometheus: main
  serviceMonitorNamespaceSelector:
    matchLabels:
      monitoring: prometheus
  probeSelector:
    matchLabels:
      prometheus: main
  probeNamespaceSelector:
    matchLabels:
      monitoring: prometheus
  additionalScrapeConfigs:
    name: additional-scrape-configs
    key: prometheus-additional.yaml
  resources:
    requests:
      cpu: 500m
      memory: 2Gi
    limits:
      cpu: 500m
      memory: 2Gi
  replicas: 1
  logLevel: info
  logFormat: logfmt
  retention: 7d
  scrapeInterval: 15s
  securityContext:
    fsGroup: 0
    runAsNonRoot: false
    runAsUser: 0
  storage:
    volumeClaimTemplate:
      spec:
        resources:
          requests:
            storage: 20Gi
---
apiVersion: v1
kind: Secret
metadata:
  namespace: monitoring
  name: additional-scrape-configs
stringData:
  prometheus-additional.yaml: |-
    - job_name: node-exporter
      ec2_sd_configs:
      - region: us-east-1
        port: 9100
        filters:
        - name: tag:node-exporter
          values:
          - true
      relabel_configs:
      - source_labels: [__meta_ec2_instance_id]
        target_label: instance_id
      - source_labels: [__meta_ec2_tag_Name]
        target_label: instance
      - regex: "__meta_ec2_tag_(.+)"
        action: labelmap
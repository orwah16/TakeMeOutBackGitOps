
apiVersion: v1
kind: Service
metadata:
  name: take-me-out-back
  namespace: staging
  labels:
    app: take-me-out-back-service
spec:
  selector:
    app: take-me-out-back
  ports:
    - name: http
      port: 3000
      targetPort: 3000
  type: LoadBalancer
# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: take-me-out-back-config
#   namespace: staging
#   labels:
#     app: take-me-out-back
# data:
#   PGDATABASE: "takemeoutdb"
#   PGHOST: "db"
#   PGPASSWORD: "123456"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: take-me-out-back
  namespace: staging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: take-me-out-back
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: take-me-out-back
    spec:
      containers:
        - name: app
          image: orwah/takemeout:latest
          # command: [ "/bin/bash", "-c", "--" ]
          # args: [ "while true; do sleep 30; done;" ]
          #commands: ["node", "app.js"]
          # volumeMounts:
          #   - name: node-persistent-storage
          #     mountPath: /data/db
          ports:
            - name: http
              containerPort:  3000
            - name: http-metrics
              containerPort:  3001
          resources:
            requests:
              memory: 256Mi
              cpu: 200m
            limits:
              memory: 256Mi
              cpu: 200m
          env:
            - name: PGDATABASE
              value: takemeoutdb
            - name: PGHOST
              value: database
            - name: PGUSER
              value: postgres
            - name: PGPASSWORD
              value: "123456"


          imagePullPolicy: Always 
      # volumes:
      #   - name: mongo-persistent-storage
      #     awsElasticBlockStore:
      #       volumeID: aws://{region}/{volume ID}
      #       fsType: ext4